DROP ALL OBJECTS;

CREATE TABLE IF NOT EXISTS adult_rate (
	adult_rate_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	adult_rate_name VARCHAR
);

CREATE TABLE IF NOT EXISTS films (
	film_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	film_name VARCHAR,
	film_description VARCHAR,
	film_release_date DATE,
	film_duration INTEGER,
	film_rate INTEGER,
	adult_rate_ID INTEGER REFERENCES adult_rate (adult_rate_ID)
);

CREATE TABLE IF NOT EXISTS genre (
	genre_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	genre_name VARCHAR UNIQUE
);

CREATE TABLE IF NOT EXISTS films_genre (
	film_ID BIGINT REFERENCES films (film_ID) ON DELETE CASCADE,
	genre_ID INTEGER REFERENCES genre (genre_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS users (
	user_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_email VARCHAR,
	user_login VARCHAR,
	user_name VARCHAR,
	user_birthday DATE
);

CREATE TABLE IF NOT EXISTS friendship_status (
	friendship_status_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	friendship_status_name VARCHAR UNIQUE
);

CREATE TABLE IF NOT EXISTS user_friendship (
	user_ID BIGINT REFERENCES users (user_ID) ON DELETE CASCADE,
	friend_user_ID BIGINT REFERENCES users (user_ID) ON DELETE CASCADE,
	friendship_status_ID INTEGER REFERENCES friendship_status (friendship_status_ID),
	UNIQUE (user_ID, friend_user_ID)
);

CREATE TABLE IF NOT EXISTS film_likes (
	film_ID BIGINT REFERENCES films (film_ID) ON DELETE CASCADE,
	user_ID BIGINT REFERENCES users (user_ID) ON DELETE CASCADE,
	UNIQUE (film_ID, user_ID)
);
